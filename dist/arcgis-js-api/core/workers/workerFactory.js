define(["require","exports","../tsSupport/assignHelper","dojo/_base/kernel","../../config","../has","../Logger","../promiseUtils","./loaderConfig","./utils","./WorkerFallback"],function(e,r,s,i,d,f,a,t,g,l,c){function o(n){return t.create(function(a){function t(e){var r=l.receiveMessage(e);if(r)switch(r.type){case m:!function(e){var r,a=d.workers.loaderUrl||g.DEFAULT_LOADER_URL;if(null!=d.default){var t=s({},d);delete t.default,r=JSON.parse(JSON.stringify(t))}else r=JSON.parse(JSON.stringify(d));var o=d.workers.loaderConfig,n=g.default({baseUrl:o.baseUrl,locale:i.locale,has:s({"config-deferredInstrumentation":0,"dojo-test-sniff":0,"esri-secure-context":f("esri-secure-context"),"esri-workers-arraybuffer-transfer":f("esri-workers-arraybuffer-transfer"),"events-keypress-typed":0,"host-webworker":1},o.has),map:s({},o.map),paths:s({},o.paths),packages:o.packages||[]});e.postMessage({type:p,configure:{esriConfig:r,loaderUrl:a,loaderConfig:n}})}(n);break;case v:n.removeEventListener("message",t),n.removeEventListener("error",o),a(n)}}function o(e){e.preventDefault(),n.removeEventListener("message",t),n.removeEventListener("error",o),u.warn("Failed to create Worker. Fallback to execute module in main thread",e),(n=new c).addEventListener("message",t),n.addEventListener("error",o)}n.addEventListener("message",t),n.addEventListener("error",o)})}Object.defineProperty(r,"__esModule",{value:!0});var u=a.getLogger("esri.core.workers");f.add("esri-workers-arraybuffer-transfer",!f("safari")||12<=f("safari"));var n,v=l.MessageType.CONFIGURED,p=l.MessageType.CONFIGURE,m=l.MessageType.HANDSHAKE;try{n=URL.createObjectURL(new Blob(['var globalId=0;var outgoing=new Map;var configured=false;var HANDSHAKE=0;var CONFIGURE=1;var CONFIGURED=2;var OPEN=3;var OPENED=4;var RESPONSE=5;var INVOKE=6;var CANCEL=7;function mapDelete(map,key){map["delete"](key)}function receiveMessage(event){if(!event||!event.data){return null}if(typeof event.data==="string"){return JSON.parse(event.data)}return event.data}function invokeStaticMessage(methodName,data,options){var signal=options&&options.signal;var Deferred=require("dojo/Deferred");var jobId=globalId++;var abortHandler=function(){if(!outgoing.has(jobId)){return}self.postMessage({type:CANCEL,methodName:methodName,jobId:jobId});mapDelete(outgoing,jobId);if(!deferred.isCanceled()){deferred.cancel()}if(signal){signal.removeEventListener("abort",abortHandler)}};if(signal){signal.addEventListener("abort",abortHandler)}var deferred=new Deferred(abortHandler);outgoing.set(jobId,deferred);self.postMessage({type:INVOKE,methodName:methodName,jobId:jobId,data:data});return deferred.promise}function messageHandler(event){var message=receiveMessage(event);if(!message){return}var jobId=message.jobId;switch(message.type){case CONFIGURE:var configuration=message.configure;if(configured){return}self.dojoConfig=configuration.loaderConfig;self.importScripts(configuration.loaderUrl);if(typeof require.config==="function"){require.config(configuration.loaderConfig)}require(["esri/config"],function(esriConfig){for(var name in configuration.esriConfig){if(Object.prototype.hasOwnProperty.call(configuration.esriConfig,name)){esriConfig[name]=configuration.esriConfig[name]}}self.postMessage({type:CONFIGURED})});break;case OPEN:var modulePath=message.modulePath;require(["esri/core/workers/RemoteClient",modulePath],function(RemoteClient,Module){var port=RemoteClient.connect(Module);self.postMessage({type:OPENED,jobId:jobId,data:port},[port])});break;case RESPONSE:if(outgoing.has(jobId)){var deferred=outgoing.get(jobId);mapDelete(outgoing,jobId);if(message.error){deferred.reject(JSON.parse(message.error))}else{deferred.resolve(message.data)}}break}}self.addEventListener("message",messageHandler);self.postMessage({type:HANDSHAKE});'],{type:"text/javascript"}))}catch(e){}var b="Failed to create Worker. Fallback to execute module in main thread";r.createWorker=function(){if(!f("esri-workers"))return o(new c);var r;if(n)try{r=new Worker(n)}catch(e){u.warn(b,event),r=new c}else u.warn(b,event),r=new c;return o(r)}});