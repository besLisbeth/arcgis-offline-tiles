(function(){(this||window).webpackJsonp.registerAbsMids({"esri/layers/MapNotesLayer":"2OQv"})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{"2OQv":function(e,t,o){var r,n;r=[o.dj.c(e.i),t,o("zOht"),o("y4WC"),o("EUqE"),o("qMld"),o("Vx27"),o("Zvuv"),o("0RER"),o("FEX1"),o("QJ8R")],void 0===(n=function(e,t,o,r,n,l,a,i,u,c,p){return function(e){function t(t){var o=e.call(this,t)||this;return o.type="map-notes",o}return o.__extends(t,e),Object.defineProperty(t.prototype,"fullExtent",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return e?e.union(t.fullExtent):t.fullExtent}),null):null},enumerable:!0,configurable:!0}),t.prototype.readFeatureCollectionsFromItem=function(e,t,o){return t.layers.map((function(e){var t=new i;return t.read(e,o),t}))},t.prototype.readFeatureCollectionsFromWebMap=function(e,t,o){return t.featureCollection.layers.map((function(e){var t=new i;return t.read(e,o),t}))},Object.defineProperty(t.prototype,"minScale",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return null==e?t.minScale:Math.min(e,t.minScale)}),null):0},set:function(e){this.featureCollections.forEach((function(t){t.minScale=e})),this._set("minScale",e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maxScale",{get:function(){return this.featureCollections?this.featureCollections.reduce((function(e,t){return null==e?t.maxScale:Math.min(e,t.maxScale)}),null):0},set:function(e){this.featureCollections.forEach((function(t){t.maxScale=e})),this._set("maxScale",e)},enumerable:!0,configurable:!0}),t.prototype.load=function(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),l.resolve(this)},o.__decorate([a.property({dependsOn:["featureCollections"],readOnly:!0})],t.prototype,"fullExtent",null),o.__decorate([a.property({type:["show","hide"]})],t.prototype,"listMode",void 0),o.__decorate([a.property({type:r.ofType(i)})],t.prototype,"featureCollections",void 0),o.__decorate([a.reader("portal-item","featureCollections",["layers"])],t.prototype,"readFeatureCollectionsFromItem",null),o.__decorate([a.reader("web-map","featureCollections",["featureCollection.layers"])],t.prototype,"readFeatureCollectionsFromWebMap",null),o.__decorate([a.property({dependsOn:["featureCollections"]})],t.prototype,"minScale",null),o.__decorate([a.property({dependsOn:["featureCollections"]})],t.prototype,"maxScale",null),o.__decorate([a.property({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),o.__decorate([a.subclass("esri.layers.MapNotesLayer")],t)}(c.OperationalLayer(p.PortalLayer(n.MultiOriginJSONMixin(u))))}.apply(null,r))||(e.exports=n)}}]);